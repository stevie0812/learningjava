buildscript {
	ext {
		springBootVersion = '2.0.4.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}

ext {
	assertJVersion = "3.9.1"
	springFoxSwaggerVersion = "2.8.0"
	jsonpVersion = "1.1.2"
	jacksonDatabindVersion = "2.9.5"

	junitVersion = "4.12"
	assertJVersion = "3.9.1"
	hamcrestVersion = "1.3"
	mockitoVersion = "2.15.0"
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-web')
	runtime('com.h2database:h2')
	compileOnly('org.projectlombok:lombok')
	testCompile('org.springframework.boot:spring-boot-starter-test')

	// Online REST API documentation
	compile("io.springfox:springfox-swagger2:$springFoxSwaggerVersion")
	compile("io.springfox:springfox-bean-validators:$springFoxSwaggerVersion")
	runtime("io.springfox:springfox-swagger-ui:$springFoxSwaggerVersion")

	// JSON processing
	compile("org.glassfish:javax.json:$jsonpVersion")
	runtime "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:$jacksonDatabindVersion"
	runtime "com.fasterxml.jackson.datatype:jackson-datatype-jdk8:$jacksonDatabindVersion"

	// auditing
	compile group: 'org.springframework', name: 'spring-aspects', version: '5.0.8.RELEASE'

	// testing
	testImplementation("junit:junit:$junitVersion")
	testImplementation("org.hamcrest:hamcrest-core:$hamcrestVersion")
	testImplementation("org.assertj:assertj-core:$assertJVersion")
	testImplementation("org.mockito:mockito-core:$mockitoVersion")
}

wrapper {
	gradleVersion = "4.4"
}